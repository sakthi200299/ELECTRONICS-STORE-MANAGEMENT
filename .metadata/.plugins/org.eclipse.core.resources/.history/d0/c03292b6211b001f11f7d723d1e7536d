package com.ElectronicsManagementSystem.service;

import com.ElectronicsManagementSystem.DAO.OrderDAO;
import com.ElectronicsManagementSystem.entity.Order;
import com.ElectronicsManagementCustomer.Entity.CustomerDetails;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.web.client.RestTemplate;

import java.sql.Timestamp;
import java.util.List;

@Service
public class OrderService {
    @Autowired
    private final OrderDAO orderDao;

    @Autowired
    private RestTemplate restTemplate;

    private final String customerServiceUrl = "http://localhost:8089/customer";

    public OrderService(OrderDAO orderDao) {
        this.orderDao = orderDao;
    }

    public List<Order> getAllOrders() {
        return orderDao.getAllOrders();
    }

    public Order getOrderById(int orderId) {
        return orderDao.getOrderById(orderId);
    }

    public Order createOrder(int customerId) {
        Order order = new Order();

        CustomerDetails customerDetails = fetchCustomerById(customerId);

        order.setCustomer(customerDetails);
        order.setOrderStatus("PENDING");
        order.setOrderDate(new Timestamp(System.currentTimeMillis()));
        order.setTotalAmount(0);
        return orderDao.createOrder(order);
    }

    public Order updateOrder(int orderId, Order order) {
        Order existingOrder = orderDao.getOrderById(orderId);

        if (existingOrder == null) {
            throw new RuntimeException("Order with ID " + orderId + " not found.");
        }

        existingOrder.setCustomer(order.getCustomer());
        existingOrder.setOrderStatus(order.getOrderStatus());
        existingOrder.setOrderDate(order.getOrderDate());
        existingOrder.setTotalAmount(order.getTotalAmount());

        return orderDao.updateOrder(orderId, existingOrder);
    }

    public boolean deleteOrder(int orderId) {
        return orderDao.deleteOrder(orderId);
    }

    private CustomerDetails fetchCustomerById(int customerId) {
        String url = customerServiceUrl + "/" + customerId;
        return restTemplate.getForObject(url, CustomerDetails.class);
    }
}